{"version":3,"sources":["components/formContorllerComponent.jsx","components/formViewOrderComponent.jsx","components/fromViewTotalComponent.jsx","components/formComponent.jsx","components/report.js","App.js","serviceWorker.js","index.js"],"names":["FormController","state","legal_id","_this","props","data","start_date","end_date","doc_number","handleSubmit","e","preventDefault","v","fetch","mode","method","credentials","body","then","response","console","log","text","handleChange","setState","Object","defineProperty","target","name","value","setTimeout","takeDataFromFormControllerComponent","_this2","this","react_default","a","createElement","className","id","onChange","Component","FormViewOrder","all","venue_name","fee_data","venue_summaries","cashordersum","payment_type_summaries","order_sum","cashordercount","order_count","cashorderfee","order_fee","companysummary","company_summary","company_fee","noncashordersum","noncashordercount","noncashorderfee","courierordersum","courierordercount","courierorderfee","sendDataToFormComponent","takeDataFromViewOrderComponent","rowSpan","FormViewTotal","pt","tableData","colSpan","Math","round","Form","formViewOrderComponentData","formState","inputsData","onSubmit","action","formContorllerComponent","formViewOrderComponent","fromViewTotalComponent","type","DATA","payment_type","venue_deactivated","venue_fee","venue_id","prepayment_company_fee","order_card_fee","App","formComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.097e24ca.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nclass FormController extends Component {\n  state = {\n    legal_id: this.props.data[0].legal_id,\n    start_date: this.props.data[0].start_date,\n    end_date: this.props.data[0].end_date,\n    doc_number: this.props.data[0].doc_number\n  };\n\n  handleSubmit = e => {\n    let report = \"/report.js\";\n    e.preventDefault();\n    let v = this.state;\n    fetch(report, {\n      mode: \"no-cors\",\n      method: \"post\",\n      credentials: \"include\",\n      body: v\n    }).then(function(response) {\n      console.log(response.text());\n    });\n  };\n\n  handleChange = e => {\n    e.preventDefault();\n    this.setState({ [e.target.name]: e.target.value });\n    setTimeout(\n      () => this.props.takeDataFromFormControllerComponent(this.state),\n      0\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"header\">Редактирование отчета о заказах</h1>\n\n        <h2 className=\"middle-header\">Инфа о документах</h2>\n        <h3 className=\"small-header\">Юрлицо</h3>\n        <div className=\"input-wrapper\">\n          <select name=\"legal_id\" id=\"\" className=\"selector\">\n            <option value=\"\">{this.state.legal_id}</option>\n          </select>\n          <span className=\"after-select\"> ▼ </span>\n        </div>\n\n        <h3 className=\"small-header\">Начало периода</h3>\n        <div className=\"input-wrapper\">\n          <input\n            name=\"start_date\"\n            className=\"input\"\n            onChange={e => this.handleChange(e)}\n            value={this.state.start_date}\n          />\n        </div>\n\n        <h3 className=\"small-header\">Конец периода</h3>\n        <div className=\"input-wrapper\">\n          <input\n            name=\"end_date\"\n            className=\"input\"\n            onChange={e => this.handleChange(e)}\n            value={this.state.end_date}\n          />\n        </div>\n\n        <h3 className=\"small-header\">Номер документа</h3>\n        <div className=\"input-wrapper\">\n          {/* <input\n            name=\"doc_number\"\n            className=\"input\"\n            onChange={e => this.handleChange(e)}\n            value={this.state.doc_number}\n          /> */}\n        </div>\n\n        <h2 className=\"middle-header\">Итоги</h2>\n      </div>\n    );\n  }\n}\n\nexport default FormController;\n","import React, { Component } from \"react\";\n\nclass FormViewOrder extends Component {\n  state = {\n    all: {\n      venue_name: this.props.data[0].fee_data.venue_summaries[0].venue_name,\n      cashordersum: this.props.data[0].fee_data.venue_summaries[0]\n        .payment_type_summaries[0].order_sum,\n      cashordercount: this.props.data[0].fee_data.venue_summaries[0]\n        .payment_type_summaries[0].order_count,\n      cashorderfee: this.props.data[0].fee_data.venue_summaries[0]\n        .payment_type_summaries[0].order_fee,\n      companysummary: this.props.data[0].fee_data.company_summary.company_fee,\n      noncashordersum: this.props.data[0].fee_data.venue_summaries[0]\n        .payment_type_summaries[1].order_sum,\n      noncashordercount: this.props.data[0].fee_data.venue_summaries[0]\n        .payment_type_summaries[1].order_count,\n      noncashorderfee: this.props.data[0].fee_data.venue_summaries[0]\n        .payment_type_summaries[1].order_fee,\n      courierordersum: this.props.data[0].fee_data.venue_summaries[0]\n        .payment_type_summaries[2].order_sum,\n      courierordercount: this.props.data[0].fee_data.venue_summaries[0]\n        .payment_type_summaries[2].order_count,\n      courierorderfee: this.props.data[0].fee_data.venue_summaries[0]\n        .payment_type_summaries[2].order_fee\n    }\n  };\n\n  /* Передаю данные в центральный компонент, чтобы потом\n оттуда они были переданы в братский компонент \"Итого\" (там их можно обработать:\n сложить друг с другом, например.)*/\n  sendDataToFormComponent = () => {\n    this.props.takeDataFromViewOrderComponent(this.state.all);\n  };\n\n  componentDidMount() {\n    this.sendDataToFormComponent();\n  }\n\n  render() {\n    const all = this.state.all;\n\n    return (\n      <div>\n        <h2 className=\"middle-header\">Инфа о заказах</h2>\n\n        <table className=\"section-table section-table\">\n          <tbody>\n            <tr className=\"section-table-row border\">\n              <th>Точка</th>\n              <th>Способ оплаты</th>\n              <th>Количество реализованных операций</th>\n              <th>Общая сумма реализованных операций</th>\n              <th>Вознаграждение исполнителя</th>\n              <th>Абонентская плата</th>\n            </tr>\n            <tr className=\"section-table-row border\">\n              <td id=\"venue_name-td\" rowSpan=\"3\">\n                {this.state.all.venue_name}\n              </td>\n              <td>Наличный расчет</td>\n              <td>{all.cashordercount}</td>\n              <td>{all.cashordersum}</td>\n              <td>{all.cashorderfee}</td>\n              <td rowSpan=\"3\">{all.companysummary}</td>\n            </tr>\n            <tr className=\"section-table-row border\">\n              <td>Безналчиный расчет</td>\n              <td>{all.noncashordercount}</td>\n              <td>{all.noncashordersum}</td>\n              <td>{all.noncashorderfee}</td>\n            </tr>\n            <tr className=\"section-table-row border\">\n              <td>Картой курьеру</td>\n              <td>{all.courierordercount}</td>\n              <td>{all.courierordersum}</td>\n              <td>{all.courierorderfee}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default FormViewOrder;\n","import React, { Component } from \"react\";\n\nclass FormViewTotal extends Component {\n  render() {\n    const pt = this.props.tableData;\n    return (\n      <div>\n        <h2 className=\"middle-header\">Итоги</h2>\n        <table className=\"section-table section-table\">\n          <tbody>\n            <tr className=\"section-table-row border\">\n              <th>Точка</th>\n              <th>Способ оплаты</th>\n              <th>Количество реализованных операций</th>\n              <th>Общая сумма реализованных операций</th>\n              <th>Вознаграждение исполнителя</th>\n              <th>Абонентская плата</th>\n            </tr>\n            <tr className=\"section-table-row border\">\n              <td id=\"venue_name-td\" rowSpan=\"3\">\n                {pt.venue_name}\n              </td>\n              <td>Наличный расчет</td>\n              <td>{pt.cashordercount}</td>\n              <td>{pt.cashordersum}</td>\n              <td>{pt.cashorderfee}</td>\n              <td rowSpan=\"3\">{pt.companysummary}</td>\n            </tr>\n            <tr className=\"section-table-row border\">\n              <td>Безналчиный расчет</td>\n              <td>{pt.noncashordercount}</td>\n              <td>{pt.noncashordersum}</td>\n              <td>{pt.noncashorderfee}</td>\n            </tr>\n            <tr className=\"section-table-row border\">\n              <td>Картой курьеру</td>\n              <td>{pt.courierordercount}</td>\n              <td>{pt.courierordersum}</td>\n              <td>{pt.courierorderfee}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"2\"> Итого:</td>\n              <td>\n                {+pt.cashordercount +\n                  +pt.courierordercount +\n                  +pt.noncashordercount}\n              </td>\n              <td>\n                {pt.cashordersum + pt.noncashordersum + pt.courierordersum}\n              </td>\n              <td>\n                {Math.round(\n                  100 * +pt.cashorderfee +\n                    +pt.noncashorderfee +\n                    +pt.courierorderfee\n                ) / 100}\n              </td>\n              <td>{pt.companysummary}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default FormViewTotal;\n","import React, { Component } from \"react\";\nimport FormController from \"./formContorllerComponent\";\nimport FormViewOrder from \"./formViewOrderComponent\";\nimport FormViewTotal from \"./fromViewTotalComponent\";\n\nclass Form extends Component {\n  state = {\n    formViewOrderComponentData: {},\n    formState: {}\n  };\n\n  /* В случае, если бы у нас реально формировался некий\n  итог в таблице \"итого\", то нам понадобились бы данные, \n  для последующей и обработки в таблице итого. Например, \n  их можно было бы сложить с др-др и т.п. \n  \n  Поэтому, с помощью следующей ниже функции, мы получим данные\n  в этот компонент чтобы далее можно было передать их дочернему \n  компоненту, ответственному за итоговую обработку (таблицу \"Итого\") */\n  takeDataFromViewOrderComponent = tableData => {\n    this.setState({ formViewOrderComponentData: tableData });\n  };\n\n  takeDataFromFormControllerComponent = inputsData => {\n    this.setState({ formState: inputsData });\n  };\n\n  render() {\n    return (\n      <div>\n        <form\n          onSubmit={e => this.handleSubmit(e)}\n          className=\"form\"\n          id=\"form\"\n          action=\"\"\n        >\n          <FormController\n            data={this.props.data}\n            takeDataFromFormControllerComponent={inputsData =>\n              this.takeDataFromFormControllerComponent(inputsData)\n            }\n          />\n          <FormViewOrder\n            data={this.props.data}\n            takeDataFromViewOrderComponent={tableData =>\n              this.takeDataFromViewOrderComponent(tableData)\n            }\n          />\n          <FormViewTotal\n            data={this.props.data}\n            tableData={this.state.formViewOrderComponentData}\n          />\n          <input\n            type=\"submit\"\n            value=\"Сохранить\"\n            id=\"save-button\"\n            className=\"save-button\"\n            onSubmit={e => this.handleSubmit(e)}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form;\n","export const DATA = [\r\n  {\r\n    end_date: \"2019-02-28\",\r\n    start_date: \"2019-02-01\",\r\n    fee_data: {\r\n      venue_summaries: [\r\n        {\r\n          payment_type_summaries: [\r\n            {\r\n              order_sum: 10682.17,\r\n              order_count: 15,\r\n              order_fee: 534.11,\r\n              payment_type: 0\r\n            },\r\n            {\r\n              order_sum: 12548.85,\r\n              order_count: 16,\r\n              order_fee: 627.44,\r\n              payment_type: 1\r\n            },\r\n            {\r\n              order_sum: 15103.07,\r\n              order_count: 21,\r\n              order_fee: 755.15,\r\n              payment_type: 5\r\n            }\r\n          ],\r\n          venue_name: \"Picasso\",\r\n          venue_deactivated: null,\r\n          venue_fee: 0.0,\r\n          venue_id: \"5169618595348480\"\r\n        }\r\n      ],\r\n      payment_type_summaries: [\r\n        {\r\n          order_sum: 10682.17,\r\n          order_count: 15,\r\n          order_fee: 534.11,\r\n          payment_type: 0\r\n        },\r\n        {\r\n          order_sum: 12548.85,\r\n          order_count: 16,\r\n          order_fee: 627.44,\r\n          payment_type: 1\r\n        },\r\n        {\r\n          order_sum: 15103.07,\r\n          order_count: 21,\r\n          order_fee: 755.15,\r\n          payment_type: 5\r\n        }\r\n      ],\r\n      company_summary: {\r\n        company_fee: 3000.0,\r\n        prepayment_company_fee: 0.0,\r\n        venue_fee: 0.0,\r\n        order_fee: 1916.7,\r\n        order_card_fee: 627.44,\r\n        order_sum: 38334.09,\r\n        order_count: 52\r\n      }\r\n    },\r\n    legal_id: 2,\r\n    doc_number: 463\r\n  }\r\n];\r\n","import React, { Component } from \"react\";\nimport Form from \"./components/formComponent\";\nimport { DATA } from \"./components/report\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  state = {\n    data: DATA\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <Form data={this.state.data} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}